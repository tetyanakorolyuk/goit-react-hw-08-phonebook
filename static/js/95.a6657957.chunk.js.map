{"version":3,"file":"static/js/95.a6657957.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Spinner/Spinner.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/views/ContactsView/ContactsView.module.css?919f","views/ContactsView/ContactsView.js"],"sourcesContent":["export const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => state.contacts.contacts;\n\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getLoading } from '../../redux/contacts/contacts-selectors';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoading);\n\n  const theme = createTheme({\n    status: {\n      danger: '#e53e3e',\n    },\n    palette: {\n      primary: {\n        main: '#0971f1',\n      },\n      neutral: {\n        main: 'rgb(248, 177, 177)',\n        contrastText: '#000000',\n      },\n    },\n  });\n\n  return (\n    <li className={s.item}>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <ThemeProvider theme={theme}>\n        <Button variant=\"outlined\" startIcon={<DeleteIcon />} onClick={() => dispatch(contactsOperations.deleteContact(id))} size=\"small\" color=\"neutral\" disabled={isLoading}>\n          Delete\n        </Button>\n      </ThemeProvider>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter, getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n    const filteredContacts = getVisibleContacts();\n\nreturn (\n  <ul className={s.list}>\n    {filteredContacts?.map(contact => (\n      <ContactListItem\n        key={contact.id}\n        {...contact}\n      />\n    ))}\n  </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n  }),\n  ),\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"buttonAdd\":\"ContactForm_buttonAdd__Mr+ls\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\nimport { getLoading } from '../../redux/contacts/contacts-selectors';\nimport {Spinner} from '../Spinner/Spinner';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n  const isLoading = useSelector(getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n  const { name, value } = e.currentTarget;\n\n  switch (name) {\n    case 'name':\n      setName(value);\n      break;\n\n    case 'number':\n      setNumber(value);\n      break;\n\n    default:\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n      if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n        toast.error(`${name} is already in contacts.`);\n        return;\n        }\n        dispatch(contactsOperations.addContact({ name, number }));\n        reset();\n        toast.success(`${name} was added to contacts`);\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n  <>\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </label>\n      <button className={s.buttonAdd} type=\"submit\" disabled={isLoading}>Add contact</button>\n      </form>\n      {isLoading && <Spinner size={14} />}\n  </>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n  <label className={s.label}>\n    Find contacts by name\n    <input\n      className={s.input}\n      type=\"text\"\n      value={value}\n      onChange={(e) => dispatch(changeFilter(e.target.value))}/>\n  </label>\n  )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsView_section__UJU9N\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '../../components/Container';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport { getLoading, getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport s from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n  const isLoadingContacts = useSelector(getLoading);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div className={s.section}>\n        <ContactForm />\n        <Filter />\n        {isLoadingContacts && <h1>Loading...</h1>}\n        {contacts && <ContactList />}\n      </div>\n    </Container>\n  );\n}\n"],"names":["getLoading","state","contacts","loading","getFilter","filter","getAllContacts","contactsOperations","fetchContacts","dispatch","fetchContactsRequest","axios","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactRequest","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","id","useDispatch","isLoading","useSelector","theme","createTheme","status","danger","palette","primary","main","neutral","contrastText","className","s","ThemeProvider","Button","variant","startIcon","Delete","onClick","size","color","disabled","filteredContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","spin","keyframes","Spinner","CgSpinner","defaultProps","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","toast","type","onChange","pattern","title","required","changeFilter","target","ContactsView","isLoadingContacts","useEffect","Container"],"sourceRoot":""}