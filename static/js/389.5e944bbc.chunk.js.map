{"version":3,"file":"static/js/389.5e944bbc.chunk.js","mappings":"mQACA,EAA+B,mCAA/B,EAA0E,4BAA1E,EAA6G,2BAA7G,EAAgJ,4BAAhJ,EAAoL,4B,UCMrK,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYAC,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,OAAQ,CACNC,OAAQ,WAEVC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,QAAS,CACPD,KAAM,qBACNE,aAAc,cAKpB,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,4BAEA,kBAAMC,SA3BW,SAAAC,GACnBA,EAAEC,iBACFzB,EAAS0B,EAAAA,GAAAA,SAAwB,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAsBoBa,UAAWC,EAAQK,aAAa,MAA9D,WACE,mBAAON,UAAWC,EAAlB,kBAEE,kBAAOD,UAAWC,EAASM,KAAK,OAAOzB,KAAK,OAAOQ,MAAOR,EAAM0B,SAAUpB,QAG5E,mBAAOY,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXM,KAAK,QACLzB,KAAK,QACLQ,MAAON,EACPwB,SAAUpB,QAId,mBAAOY,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXM,KAAK,WACLzB,KAAK,WACLQ,MAAOJ,EACPsB,SAAUpB,QAId,SAACqB,EAAA,EAAD,CAAelB,MAAOA,EAAtB,UACE,SAACmB,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYC,KAAK,QAAQN,KAAK,SAA9D","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerForm\":\"RegisterView_registerForm__H2L4z\",\"title\":\"RegisterView_title__fF0wn\",\"form\":\"RegisterView_form__q9n4X\",\"label\":\"RegisterView_label__Aacwx\",\"input\":\"RegisterView_input__UcX6h\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport s from './RegisterView.module.css';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const theme = createTheme({\n    status: {\n      danger: '#e53e3e',\n    },\n    palette: {\n      primary: {\n        main: '#0971f1',\n      },\n      neutral: {\n        main: 'rgb(248, 177, 177)',\n        contrastText: '#000000',\n      },\n    },\n  });\n\n  return (\n    <div className={s.registerForm}>\n      <h1 className={s.title}>Register page</h1>\n\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <label className={s.label}>\n          Name\n          <input className={s.input} type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <ThemeProvider theme={theme}>\n          <Button color=\"neutral\" variant=\"contained\" size=\"small\" type=\"submit\">\n            Register\n          </Button>\n        </ThemeProvider>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","theme","createTheme","status","danger","palette","primary","main","neutral","contrastText","className","s","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","ThemeProvider","Button","color","variant","size"],"sourceRoot":""}